//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLevel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChatDbEntities : DbContext
    {
        public ChatDbEntities()
            : base("name=ChatDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cause> Cause { get; set; }
        public virtual DbSet<Message> Message { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<LogUserDeleted> LogUserDeleted { get; set; }
        public virtual DbSet<LogUserLocked> LogUserLocked { get; set; }
        public virtual DbSet<LogUserOnLine> LogUserOnLine { get; set; }
        public virtual DbSet<RelationBlackList> RelationBlackList { get; set; }
        public virtual DbSet<RelationFriend> RelationFriend { get; set; }
    
        public virtual ObjectResult<CurrentUser> GetCurrentUser(byte[] hash)
        {
            var hashParameter = hash != null ?
                new ObjectParameter("hash", hash) :
                new ObjectParameter("hash", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CurrentUser>("GetCurrentUser", hashParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> Login(byte[] hash)
        {
            var hashParameter = hash != null ?
                new ObjectParameter("hash", hash) :
                new ObjectParameter("hash", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("Login", hashParameter);
        }
    
        public virtual int Logout(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Logout", userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> Registration(string login, byte[] hash, string email, Nullable<int> color32, Nullable<byte> roleId)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var hashParameter = hash != null ?
                new ObjectParameter("hash", hash) :
                new ObjectParameter("hash", typeof(byte[]));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var color32Parameter = color32.HasValue ?
                new ObjectParameter("color32", color32) :
                new ObjectParameter("color32", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("roleId", roleId) :
                new ObjectParameter("roleId", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("Registration", loginParameter, hashParameter, emailParameter, color32Parameter, roleIdParameter);
        }
    
        public virtual int AddMessage(string text, Nullable<int> userId, Nullable<int> statusId, string usersId)
        {
            var textParameter = text != null ?
                new ObjectParameter("text", text) :
                new ObjectParameter("text", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("statusId", statusId) :
                new ObjectParameter("statusId", typeof(int));
    
            var usersIdParameter = usersId != null ?
                new ObjectParameter("usersId", usersId) :
                new ObjectParameter("usersId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMessage", textParameter, userIdParameter, statusIdParameter, usersIdParameter);
        }
    
        public virtual ObjectResult<UnreadMessage> GetUnreadMessages(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UnreadMessage>("GetUnreadMessages", userIdParameter);
        }
    
        public virtual int AddBlackList(Nullable<int> userId, string usersIdLocked)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var usersIdLockedParameter = usersIdLocked != null ?
                new ObjectParameter("usersIdLocked", usersIdLocked) :
                new ObjectParameter("usersIdLocked", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBlackList", userIdParameter, usersIdLockedParameter);
        }
    
        public virtual int AddFriend(Nullable<int> userId, string usersId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var usersIdParameter = usersId != null ?
                new ObjectParameter("usersId", usersId) :
                new ObjectParameter("usersId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFriend", userIdParameter, usersIdParameter);
        }
    
        public virtual ObjectResult<OnlineUser> GetOnlineUsers(Nullable<int> currentUserId)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("currentUserId", currentUserId) :
                new ObjectParameter("currentUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OnlineUser>("GetOnlineUsers", currentUserIdParameter);
        }
    
        public virtual ObjectResult<UserRelatioResult> GetUserRelation(Nullable<int> currentUserId, Nullable<int> relationUserId)
        {
            var currentUserIdParameter = currentUserId.HasValue ?
                new ObjectParameter("currentUserId", currentUserId) :
                new ObjectParameter("currentUserId", typeof(int));
    
            var relationUserIdParameter = relationUserId.HasValue ?
                new ObjectParameter("relationUserId", relationUserId) :
                new ObjectParameter("relationUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserRelatioResult>("GetUserRelation", currentUserIdParameter, relationUserIdParameter);
        }
    
        public virtual int RemoveBlackList(Nullable<int> userId, string usersIdLocked)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var usersIdLockedParameter = usersIdLocked != null ?
                new ObjectParameter("usersIdLocked", usersIdLocked) :
                new ObjectParameter("usersIdLocked", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveBlackList", userIdParameter, usersIdLockedParameter);
        }
    }
}
