<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:ChatClient.Converter"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">
    <SolidColorBrush x:Key="clrButton" Color="#424949"/>
    <SolidColorBrush x:Key="clrDarkForegraund" Color="#7e7e86"/>
    <SolidColorBrush x:Key="clrLightForegraund" Color="LightGray"/>
    <SolidColorBrush x:Key="ClrLogo" Color="#37373a"/>
    <converter:FromRGBConverter x:Key="ColorFromRGB"/>
    
    <DataTemplate x:Key="ListBoxItemTemplate">
        <DockPanel LastChildFill="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                    <ei:ChangePropertyAction
                                            TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" 
                                            PropertyName="IsSelected" Value="false" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TextBlock Text="{Binding Login}" />
        </DockPanel>
    </DataTemplate>

    <Style x:Key="ListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="Styletext">
        <Setter Property="Control.FontSize" Value="21"/>
        <Setter Property="Control.Margin" Value="5"/>
        <Setter Property="Control.FontFamily" Value="Comic Sans MS"/>
    </Style>
    <Style x:Key="StyleTextField" BasedOn="{StaticResource Styletext}">
        <Setter Property="Control.Background" Value="{StaticResource clrLightForegraund}"/>
        <Setter Property="Control.BitmapEffect">
            <Setter.Value>
                <DropShadowBitmapEffect Color="Black" Direction="270"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LogoStyle" BasedOn="{StaticResource Styletext}">
        <!--<Setter Property="Control.Foreground" Value="{StaticResource ClrLogo}"/>-->
        <Setter Property="Control.FontWeight" Value="SemiBold"/>

    </Style>
    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource StyleTextField}"/>
    <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource StyleTextField}"/>
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource StyleTextField}"/>
    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Styletext}"/>
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StyleTextField}"/>
    <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource StyleTextField}" />
    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource Styletext}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SelectedValuePath" Value="Id"/>
        <Setter Property="ItemTemplate" Value="{StaticResource ListBoxItemTemplate}" />
        <!--<Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Login}"
                               Foreground="{Binding Color, Converter={StaticResource ColorFromRGB}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="{x:Type Hyperlink}" BasedOn="{StaticResource Styletext}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextDecorations"  Value="None"/>
        <Setter Property="Foreground" Value="#1c2833"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Styletext}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid Margin="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="7,0,7,0"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="{StaticResource clrButton}"/>
        <Setter Property="Foreground" Value="{StaticResource clrLightForegraund}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="{x:Type Image}">
        <Setter Property="Source" Value="{DynamicResource Default}"/>
        <Setter Property="Margin" Value="5"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsMouseOver}" Value="True">
                <Setter Property="Source" Value="{DynamicResource MouseOver}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxSearchStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource Styletext}">
        <Setter Property="Background" Value="{StaticResource clrButton}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="-3,-2,-3,-1" BorderThickness="1,1,1,0">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource clrLightForegraund}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource clrDarkForegraund}"/>
                            <Setter TargetName="Border" Property="Margin" Value="0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="BorderBrush" Value="SteelBlue"></Setter>
                            <Setter TargetName="Border" Property="Background" Value="PowderBlue" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>